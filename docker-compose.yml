name: grafana_org

volumes:
  data_grafana:
  data_loki:

services:
  # GRAFANA --------------------------------------------------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:          [ "3000:3000/tcp" ]
    healthcheck:
      test:     "wget -q --spider 'http://grafana:3000/api/health' 1>/dev/null 2>&1"
      interval:     1s
      timeout:      1s
      start_period: 20s
    volumes:
      - data_grafana:/var/lib/grafana:rw
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=superuser
      - GF_USERS_DEFAULT_THEME=light

      # Enable Grafana's built-in Keycloak OIDC login
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Keycloak
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=true
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=m92fecXo3OjKNAvdixUHTrVlG04hwiaL
      - GF_AUTH_GENERIC_OAUTH_DEBUG=true
      - GF_AUTH_GENERIC_OAUTH_USE_PKCE=true
      - GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH=groups
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email

      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://keycloak:8080/realms/grafana/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://keycloak:8080/realms/grafana/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=http://keycloak:8080/realms/grafana/protocol/openid-connect/userinfo
      - GF_AUTH_GENERIC_OAUTH_REDIRECT_URI=http://localhost:3000/login/generic_oauth
      - GF_AUTH_GENERIC_OAUTH_SIGNOUT_REDIRECT_URL=http://keycloak:8080/realms/grafana/protocol/openid-connect/logout?redirect_uri=http://localhost:3000/login
      - GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_NAME=email
      - GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH=preferred_username
      - GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH=name

      #Keep login form enabled
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_AUTH_DISABLE_SIGNOUT_MENU=false

      # Logging & base URL
      - GF_SERVER_ROOT_URL=http://localhost:3000

      - GF_LOG_LEVEL=debug
    depends_on:
      keycloak:
        condition: service_healthy

  # KEYCLOACK --------------------------------------------------------------------
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command: 
      - start-dev 
      - --import-realm
      - --verbose
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=superuser
    volumes:
      - ./grafana-realm.json:/opt/keycloak/data/import/grafana-realm.json:ro
    ports:
      - "8080:8080"
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/localhost/8080 && echo -e "GET /realms/master/.well-known/openid-configuration HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n" >&3 && grep "200 OK" <&3'
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

#  # PROMETHEUS --------------------------------------------------------------------
#
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"  
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'

  # LOKI -----------------------------------------------------------------------
  loki:
    image:          grafana/loki:latest
    container_name: loki
    ports:          [ "3100:3100/tcp" ]
    healthcheck:
      test:         "wget -q --spider 'http://loki:3100/ready' 1>/dev/null 2>&1"
      interval:     1s
      timeout:      1s
      start_period: 20s
      retries:      60
    volumes:
      - ./loki.yml:/etc/loki.yaml:ro
      - data_loki:/loki:rw
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki.yaml
    depends_on:
      grafana:
        condition: service_healthy

  # ALLOY ----------------------------------------------------------------------
  alloy:
    image:          grafana/alloy:latest
    container_name: alloy
    ports:          [ "12345:12345/tcp" ]
    volumes:
      - ./alloy.hcl:/etc/alloy/config.alloy
      - /var/log:/logs:ro
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - /etc/alloy/config.alloy
    depends_on:
      loki:
        condition: service_healthy

  # LOCAL APP ----------------------------------------------------------------------
#  local-app:
#    build: ./local-app
#    container_name: local-app
#
#    ports:
#      - "8080:8080"
