name: grafana_rights

volumes:
  data_grafana:
  data_loki:

services:
  # GRAFANA --------------------------------------------------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:          [ "3000:3000/tcp" ]
    healthcheck:
      test:     "wget -q --spider 'http://grafana:3000/api/health' 1>/dev/null 2>&1"
      interval:     1s
      timeout:      1s
      start_period: 20s
    volumes:
      - data_grafana:/var/lib/grafana:rw
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=superuser
      - GF_USERS_DEFAULT_THEME=light

      # Disable direct login (use oauth2-proxy)
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true

      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_PROXY_HEADER_NAME=X-Email
      - GF_AUTH_PROXY_HEADER_PROPERTY=email
      - GF_AUTH_PROXY_AUTO_SIGN_UP=true
      - GF_AUTH_PROXY_HEADER_NAME_X_GROUPS=X-Groups
      - GF_SERVER_ROOT_URL=http://localhost:4180
      - GF_LOG_LEVEL=debug
    depends_on:
      - oauth2-proxy

  # OAUTH2-PROXY --------------------------------------------------------------------
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    ports:
      - "4180:4180"
    environment:
      - OAUTH2_PROXY_PROVIDER=oidc
      - OAUTH2_PROXY_OIDC_ISSUER_URL=http://keycloak:8080/realms/grafana
      - OAUTH2_PROXY_CLIENT_ID=grafana-client
      - OAUTH2_PROXY_CLIENT_SECRET=grafana-secret
      - OAUTH2_PROXY_REDIRECT_URL=http://localhost:4180/oauth2/callback
      - OAUTH2_PROXY_COOKIE_SECRET=vBlpQlo3Y91U8qEMWLb7MSYKnh2f4XX7LSswar6S2O4=
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_UPSTREAMS=http://grafana:3000
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
      - OAUTH2_PROXY_PASS_USER_HEADERS=true
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=true
      - OAUTH2_PROXY_ALLOWED_GROUPS=TeamAlpha-Admins,TeamAlpha-Editors,TeamAlpha-Viewers,TeamBeta-Guests
    depends_on:
      keycloak:
        condition: service_healthy


  # KEYCLOACK --------------------------------------------------------------------
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command: 
      - start-dev 
      - --import-realm
      - --verbose
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=superuser
    volumes:
      - ./grafana-realm.json:/opt/keycloak/data/import/grafana-realm.json
    ports:
      - "8080:8080"
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/localhost/8080 && echo -e "GET /realms/master/.well-known/openid-configuration HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n" >&3 && grep "200 OK" <&3'
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/grafana/.well-known/openid-configuration"]
#      interval: 5s
#      retries: 20

#  # PROMETHEUS --------------------------------------------------------------------
#
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"  
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'

  # LOKI -----------------------------------------------------------------------
  loki:
    image:          grafana/loki:latest
    container_name: loki
    ports:          [ "3100:3100/tcp" ]
    healthcheck:
      test:         "wget -q --spider 'http://loki:3100/ready' 1>/dev/null 2>&1"
      interval:     1s
      timeout:      1s
      start_period: 20s
      retries:      60
    volumes:
      - ./loki.yml:/etc/loki.yaml:ro
      - data_loki:/loki:rw
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki.yaml
    depends_on:
      grafana:
        condition: service_healthy

  # ALLOY ----------------------------------------------------------------------
  alloy:
    image:          grafana/alloy:latest
    container_name: alloy
    ports:          [ "12345:12345/tcp" ]
    volumes:
      - ./alloy.hcl:/etc/alloy/config.alloy
      - /var/log:/logs:ro
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12345
      - /etc/alloy/config.alloy
    depends_on:
      loki:
        condition: service_healthy

  # LOCAL APP ----------------------------------------------------------------------
#  local-app:
#    build: ./local-app
#    container_name: local-app
#
#    ports:
#      - "8080:8080"
